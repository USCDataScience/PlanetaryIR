@source
articles(
    @key
    @distributed_by
    id text,
    @searchable
    content text
).

@source
sentences(
    @key
    @distributed_by
    # XXX This breaks the search index.  @source should not be derived from another @source
    #@references(relation="articles", column="id")
    doc_id         text,
    @key
    sentence_index int,
    @searchable
    sentence_text  text,
    tokens         text[],
    lemmas         text[],
    pos_tags       text[],
    ner_tags       text[],
    doc_offsets    int[],
    dep_types      text[],
    dep_tokens     int[]
).

@extraction
person_mention(
    @key
    mention_id text,
    @searchable
    mention_text text,
    @distributed_by
    @references(relation="sentences", column="doc_id",         alias="appears_in")
    doc_id text,
    sentence_index int
).

@extraction
target_mention(
    @key
    mention_id text,
    @searchable
    mention_text text,
    @distributed_by
    @references(relation="sentences", column="doc_id",         alias="appears_in")
    doc_id text,
    sentence_index int,
    begin_index int,
    end_index int
).

function nlp_markup over (
        doc_id  text,
        content text
    ) returns rows like sentences
    implementation "udf/nlp_markup.sh" handles tsv lines.
    
sentences += nlp_markup(doc_id, content) :-
    articles(doc_id, content).

function map_person_mention over (
        doc_id         text,
        sentence_index int,
        sentence_text text
    ) returns rows like person_mention
    implementation "udf/map_person_mention.py" handles tsv lines.

person_mention += map_person_mention(
    doc_id, sentence_index, sentence_text
) :-
    sentences(doc_id, sentence_index,sentence_text, _, _, _, _, _, _, _).

function map_target_mention over (
        doc_id         text,
        sentence_index int,
        sentence_text text,
        tokens text[]
    ) returns rows like target_mention
    implementation "udf/map_target_mention.py" handles tsv lines.

target_mention += map_target_mention(
    doc_id, sentence_index, sentence_text, tokens
) :-
    sentences(doc_id, sentence_index,sentence_text, tokens, _, _, _, _, _, _).